<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Manish Sahani</title>
    <link>https://kalkayan.github.io/posts/</link>
    <description>Recent content in Posts on Manish Sahani</description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://kalkayan.github.io/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Automate the setup of your development machine</title>
      <link>https://kalkayan.github.io/posts/automated-setup/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://kalkayan.github.io/posts/automated-setup/</guid>
      <description>In this section we&amp;rsquo;ll create a script (lets call it as setup) in $HOME directory to automate all the installations and other setup. Lets make a list of bins (available on brew) and casks that we want to install. In the setup file add two array - bins and casks.
#!/bin/bash  # Brew casks and binaries that you need bins = ( &amp;#34;nvm&amp;#34; &amp;#34;php@7.4&amp;#34; &amp;#34;composer&amp;#34; # more valid brew formula here ) casks=( &amp;#34;slack&amp;#34; &amp;#34;postman&amp;#34; # add brew casks that you need  ) Compilers and Interpreters The first thing in the setup for any type of software development should be getting the language support - installating the compiler, interpreters etc.</description>
    </item>
    
    <item>
      <title>Designing the Elekto Project for CNCF</title>
      <link>https://kalkayan.github.io/posts/designing-elekto/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://kalkayan.github.io/posts/designing-elekto/</guid>
      <description>The Elekto Project develops Elekto, simple software for secure online elections. Elekto was created as part of an LFX internship for the Kubernetes project under the guidance of Josh Berkus, Marky Jackson, Sergey Kanzhelev, and is now a CNCF infrastructure project.
The general idea of the application is shown below. A seperate repository - k8s.elections.meta is maintained to keep track of all the meta files (.yaml) for elections, this repository serves as the single source of truth for the application&amp;rsquo;s operation which is operated by gitops model.</description>
    </item>
    
    <item>
      <title>Designing the Official Newsletter of Delhi Technological University</title>
      <link>https://kalkayan.github.io/posts/designing-dtutimes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://kalkayan.github.io/posts/designing-dtutimes/</guid>
      <description>DTU Times is the official university newsletter of Delhi Technological University, Bawana, Delhi. We are a team of 70 people, among which seven are responsible for the development of Web and Mobile APP.
DTU Times’s technology may look like a simple blog application but, for a university newsletter, it has a significantly large infrastructure consists of many services.
Like most web-based blogs, the DTU Times backend started as a “monolithic” software with some servers and a single database.</description>
    </item>
    
    <item>
      <title>Necessay tooling made easy with .files</title>
      <link>https://kalkayan.github.io/posts/tooling-with-dotfiles/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://kalkayan.github.io/posts/tooling-with-dotfiles/</guid>
      <description>Something is fascinating about customizing your operating system through dotfiles, and there are tons of articles out there on what you can do with these dotfiles. These simple invisible files may seem pointless for a novice, but they become a swiss army knife if properly configured.
In this article we&amp;rsquo;ll discuss configuring these files and the best way to manage them for multiple devices.
 This article will discuss a way to setup a new machine in under a minute and a seamless way to switch between two different machines using the single repository.</description>
    </item>
    
  </channel>
</rss>
